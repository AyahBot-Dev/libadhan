name: Tests-CI
on:
  push:
    branches: [main]
    paths-ignore:
      - "**.md"
      - "LICENSE"
  pull_request:
    types: [opened, synchronize]
    paths-ignore:
      - "**.md"
      - "LICENSE"

jobs:
  windows-msvc:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        arch:
          - amd64
          - amd64_x86
          - amd64_arm64
    steps:
      - uses: actions/checkout@v2
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.arch }}
      - name: build and test
        shell: pwsh
        run: |
          #run build and test
          $JOBS=20
          export CTEST_PARALLEL_LEVEL=$JOBS
          export CTEST_OUTPUT_ON_FAILURE=1
          mkdir -p build
          cd build
          echo [cmake]: cmake .. $EVENT_CMAKE_OPTIONS
          cmake .. -DADHAN_WITH_TESTS=on || (rm -rf * && cmake .. -DADHAN_WITH_TESTS=on)
          cmake --build .
          ./test/adhantest

  windows-msys:
    runs-on: windows-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - GNU
          - CLANG
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            base-devel
            gcc
            clang
            git
            cmake
      - uses: actions/checkout@v2
      - name: build and test
        shell: msys2 {0}
        run: |
          if [ "${{ matrix.compiler }}" == "GNU" ]; then
            export CC=gcc
            export CXX=g++
          else
            export CC=clang
            export CXX=clang++
          fi
          #run build and test
          JOBS=20
          export CTEST_PARALLEL_LEVEL=$JOBS
          export CTEST_OUTPUT_ON_FAILURE=1
          mkdir -p build
          cd build
          echo [cmake]: cmake .. $EVENT_CMAKE_OPTIONS
          cmake .. -DADHAN_WITH_TESTS=on || (rm -rf * && cmake .. -DADHAN_WITH_TESTS=on)
          cmake --build .
          ./test/adhantest

  linux:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - GNU
          - CLANG
    steps:
      - uses: actions/checkout@v2
      - name: install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install clang-8
      - name: build and test
        shell: bash
        run: |
          if [ "${{ matrix.compiler }}" == "GNU" ]; then
            export CC=gcc
            export CXX=g++
          else
            export CC=clang
            export CXX=clang++
          fi
          #run build and test
          JOBS=20
          export CTEST_PARALLEL_LEVEL=$JOBS
          export CTEST_OUTPUT_ON_FAILURE=1
          mkdir -p build
          cd build
          echo [cmake]: cmake .. $EVENT_CMAKE_OPTIONS
          cmake .. -DADHAN_WITH_TESTS=on || (rm -rf * && cmake .. -DADHAN_WITH_TESTS=on)
          cmake --build .
          ./test/adhantest

  macos:
    runs-on: macos-latest
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - GCC
          - CLANG
    steps:
      - uses: actions/checkout@v2
      - name: build and test
        shell: bash
        run: |
          if [ "${{ matrix.compiler }}" == "GNU" ]; then
            export CC=gcc
            export CXX=g++
          else
            export CC=clang
            export CXX=clang++
          fi
          #run build and test
          JOBS=20
          export CTEST_PARALLEL_LEVEL=$JOBS
          export CTEST_OUTPUT_ON_FAILURE=1
          mkdir -p build
          cd build
          cmake .. -DADHAN_WITH_TESTS=on || (rm -rf * && cmake .. -DADHAN_WITH_TESTS=on)
          cmake --build .
          ./test/adhantest
